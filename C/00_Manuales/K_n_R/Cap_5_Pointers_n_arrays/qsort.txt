/*qsort: clasifica v[left]...v[right] en orden ascendente*/
void qsort(void* v[], int left, int right, int (*comp)(void*, void*))
{
	int i, last;
	void swap(void* v[], int, int);
	
	if (left >= right) 	/*no hace nada si el arreglo contiene*/
	{					/* menos de dos elementos */
		return; 
	}
	swap(v, left, (left + right)/2);
	last = left;
	for (i = left + 1, i <= right; i++)
	{
		if ( (*comp)(v[i], v[left] < 0) /*int* comp(v[i], v[left]) es INCORRECTO*/
		{
			swap(v, ++last, i);
		}
	}
		swap(v, left, last);
		qsort(v, left, last-1, comp);
		qsort(v, last+1, right, comp);
}

#include <math.h>

/*numcmp: compara s1 y s2 numéricamente*/
int numcmp(char* s1, char* s2)
{
	double v1, v2;
	
	v1 = atof(s1);
	v2 = atof(s2);
	if (v1 < v2)
		return -1;
	else if (v1 > v2)
		return 1;
	else
		return 0;
}

void swap(void* v[]; int i, int j)
{
	void *temp;
	
	temp = v[i];
	v[i] = v[j];
	v[j] = temp;
}